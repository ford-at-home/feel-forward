#!/bin/bash

# FeelFwd Domain Setup Script
# This script helps set up SSL certificates and Route53 configuration

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

DOMAIN_NAME="felfwd.app"
REGION="us-east-1" # CloudFront requires certificates in us-east-1

print_status "Setting up domain configuration for $DOMAIN_NAME"

# Check if AWS CLI is configured
if ! aws sts get-caller-identity >/dev/null 2>&1; then
    print_error "AWS CLI is not configured. Please run 'aws configure' first."
    exit 1
fi

# Check if domain exists in Route53
print_status "Checking Route53 hosted zone..."
HOSTED_ZONE_ID=$(aws route53 list-hosted-zones --query "HostedZones[?Name=='${DOMAIN_NAME}.'].Id" --output text | sed 's|/hostedzone/||')

if [[ -z "$HOSTED_ZONE_ID" ]]; then
    print_warning "Hosted zone for $DOMAIN_NAME not found in Route53"
    echo "Please create a hosted zone for $DOMAIN_NAME in Route53 first."
    echo "You can do this through the AWS Console or by running:"
    echo "aws route53 create-hosted-zone --name $DOMAIN_NAME --caller-reference \$(date +%s)"
    exit 1
else
    print_success "Found hosted zone: $HOSTED_ZONE_ID"
fi

# Check for existing certificate
print_status "Checking for SSL certificate..."
CERTIFICATE_ARN=$(aws acm list-certificates --region $REGION --query "CertificateSummaryList[?DomainName=='${DOMAIN_NAME}' || DomainName=='*.${DOMAIN_NAME}'].CertificateArn" --output text)

if [[ -z "$CERTIFICATE_ARN" ]]; then
    print_warning "No SSL certificate found for $DOMAIN_NAME"
    echo ""
    echo "To create a certificate, run:"
    echo "aws acm request-certificate --region $REGION --domain-name $DOMAIN_NAME --subject-alternative-names \"*.$DOMAIN_NAME\" --validation-method DNS"
    echo ""
    echo "Then validate it using DNS validation in Route53."
    echo "You can use the AWS Console to add the CNAME records automatically."
    echo ""
    print_status "Continuing without certificate - will use CloudFront domain"
else
    print_success "Found certificate: $CERTIFICATE_ARN"
    
    # Check certificate status
    CERT_STATUS=$(aws acm describe-certificate --region $REGION --certificate-arn "$CERTIFICATE_ARN" --query "Certificate.Status" --output text)
    if [[ "$CERT_STATUS" == "ISSUED" ]]; then
        print_success "Certificate is issued and ready to use"
    else
        print_warning "Certificate status: $CERT_STATUS"
        echo "Please ensure the certificate is validated before deploying to production."
    fi
fi

# Create environment file for deployment
ENV_FILE=".env.deploy"
print_status "Creating deployment environment file: $ENV_FILE"

cat > "$ENV_FILE" <<EOF
# FeelFwd Deployment Environment Variables
# Generated by setup-domain.sh on $(date)

# AWS Account and Region
CDK_DEFAULT_REGION=$REGION

# Domain Configuration
HOSTED_ZONE_ID=$HOSTED_ZONE_ID
DOMAIN_NAME=$DOMAIN_NAME

# SSL Certificate (if available)
$(if [[ -n "$CERTIFICATE_ARN" ]]; then echo "CERTIFICATE_ARN=$CERTIFICATE_ARN"; else echo "# CERTIFICATE_ARN="; fi)

# API Configuration
VITE_API_URL=https://api.felfwd.app

# Stage-specific overrides
# For staging deployment, uncomment and modify:
# HOSTED_ZONE_ID_STAGING=$HOSTED_ZONE_ID
# DOMAIN_NAME_STAGING=staging.felfwd.app
# CERTIFICATE_ARN_STAGING=$CERTIFICATE_ARN
EOF

print_success "Domain setup completed!"
echo ""
echo "Configuration Summary:"
echo "====================="
echo "Domain: $DOMAIN_NAME"
echo "Hosted Zone ID: $HOSTED_ZONE_ID"
echo "Certificate ARN: ${CERTIFICATE_ARN:-'Not configured'}"
echo "Region: $REGION"
echo ""
echo "Next steps:"
echo "1. Review the configuration in $ENV_FILE"
echo "2. Source the environment file: source $ENV_FILE"
echo "3. Deploy the infrastructure: ./scripts/deploy.sh prod"
echo ""
if [[ -z "$CERTIFICATE_ARN" ]]; then
    print_warning "Remember to set up SSL certificate for production deployment!"
fi